parameters:
  name: ''
  pool: ''

jobs:
- job: ${{ parameters.name }}
  pool: ${{ parameters.pool }}
  variables:
    CPPTOOL_VERSION: v0.14.6-insiders
    CPPTOOLS_DEV: 1
    DISPLAY: ':10.0'
  steps:
  - script: |
      set -e
      /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
      disown -ar
    displayName: 'Start xvfb'

  - script: |
      # Download debugAdapters from an existing extension version. See settings to set CPPTOOL_VERSION
      mkdir -p ~/.vscode/extensions/ms-vscode.cpptools-$CPPTOOL_VERSION
      wget https://github.com/Microsoft/vscode-cpptools/releases/download/$CPPTOOL_VERSION/cpptools.vsix -O ~/cpptools.vsix
      unzip ~/cpptools.vsix "extension/debugAdapters/*" -d ~/.
      mv ~/extension/debugAdapters ~/.vscode/extensions/ms-vscode.cpptools-$CPPTOOL_VERSION/debugAdapters
    displayName: 'Download Debugger Dependencies'

  - task: NodeTool@0
    displayName: Use Node 8.x'
    inputs:
      versionSpec: 8.x

  - script: npm install
    displayName: "Install Dependencies"
    workingDirectory: '$(Build.SourcesDirectory)/Extension'
      
  - script: npm run compile
    displayName: "Compile Sources"
    workingDirectory: '$(Build.SourcesDirectory)/Extension'

  - script: npm run pr-check
    displayName: 'Validate Extension/package.json'
    workingDirectory: '$(Build.SourcesDirectory)/Extension'

  - script: npm run vscode:prepublish
    displayName: 'Copy Debugger Dependencies'
    workingDirectory: '$(Build.SourcesDirectory)/Extension'
    env:
      CPPTOOLS_DEV: 1

  - script: npm run tslint
    displayName: 'Run Linter'
    workingDirectory: '$(Build.SourcesDirectory)/Extension'

  - script: npm run unitTests
    displayName: 'Run Unit Tests'
    workingDirectory: '$(Build.SourcesDirectory)/Extension'

  - script: npm run integrationTests
    displayName: 'Run Integration Tests'
    workingDirectory: '$(Build.SourcesDirectory)/Extension'